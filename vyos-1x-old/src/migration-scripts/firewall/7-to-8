# Copyright 2022-2024 VyOS maintainers and contributors <maintainers@vyos.io>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library.  If not, see <http://www.gnu.org/licenses/>.

# T2199: Migrate interface firewall nodes to firewall interfaces <ifname> <direction> name/ipv6-name <name>
# T2199: Migrate zone-policy to firewall node

from vyos.configtree import ConfigTree

base = ['firewall']
zone_base = ['zone-policy']

def migrate_interface(config, iftype, ifname, vif=None, vifs=None, vifc=None):
    if_path = ['interfaces', iftype, ifname]
    ifname_full = ifname

    if vif:
        if_path += ['vif', vif]
        ifname_full = f'{ifname}.{vif}'
    elif vifs:
        if_path += ['vif-s', vifs]
        ifname_full = f'{ifname}.{vifs}'
        if vifc:
            if_path += ['vif-c', vifc]
            ifname_full = f'{ifname}.{vifs}.{vifc}'

    if not config.exists(if_path + ['firewall']):
        return

    if not config.exists(['firewall', 'interface']):
        config.set(['firewall', 'interface'])
        config.set_tag(['firewall', 'interface'])

    config.copy(if_path + ['firewall'], ['firewall', 'interface', ifname_full])
    config.delete(if_path + ['firewall'])

def migrate(config: ConfigTree) -> None:
    if not config.exists(base) and not config.exists(zone_base):
        # Nothing to do
        return

    for iftype in config.list_nodes(['interfaces']):
        for ifname in config.list_nodes(['interfaces', iftype]):
            migrate_interface(config, iftype, ifname)

            if config.exists(['interfaces', iftype, ifname, 'vif']):
                for vif in config.list_nodes(['interfaces', iftype, ifname, 'vif']):
                    migrate_interface(config, iftype, ifname, vif=vif)

            if config.exists(['interfaces', iftype, ifname, 'vif-s']):
                for vifs in config.list_nodes(['interfaces', iftype, ifname, 'vif-s']):
                    migrate_interface(config, iftype, ifname, vifs=vifs)

                    if config.exists(['interfaces', iftype, ifname, 'vif-s', vifs, 'vif-c']):
                        for vifc in config.list_nodes(['interfaces', iftype, ifname, 'vif-s', vifs, 'vif-c']):
                            migrate_interface(config, iftype, ifname, vifs=vifs, vifc=vifc)

    if config.exists(zone_base + ['zone']):
        config.set(['firewall', 'zone'])
        config.set_tag(['firewall', 'zone'])

        for zone in config.list_nodes(zone_base + ['zone']):
            if 'interface' in config.list_nodes(zone_base + ['zone', zone]):
                for iface in config.return_values(zone_base + ['zone', zone, 'interface']):
                    if '+' in iface:
                        config.delete_value(zone_base + ['zone', zone, 'interface'], value=iface)
                        iface = iface.replace('+', '*')
                        config.set(zone_base + ['zone', zone, 'interface'], value=iface, replace=False)
            config.copy(zone_base + ['zone', zone], ['firewall', 'zone', zone])
        config.delete(zone_base)