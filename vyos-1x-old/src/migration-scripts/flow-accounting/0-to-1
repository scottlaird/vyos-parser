# Copyright 2021-2024 VyOS maintainers and contributors <maintainers@vyos.io>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library.  If not, see <http://www.gnu.org/licenses/>.

# T4099: flow-accounting: sync "source-ip" and "source-address" between netflow
#        and sflow ion CLI
# T4105: flow-accounting: drop "sflow agent-address auto"

from vyos.configtree import ConfigTree

base = ['system', 'flow-accounting']

def migrate(config: ConfigTree) -> None:
    if not config.exists(base):
        # Nothing to do
        return

    # T4099
    tmp = base + ['netflow', 'source-ip']
    if config.exists(tmp):
        config.rename(tmp, 'source-address')

    # T4105
    tmp = base + ['sflow', 'agent-address']
    if config.exists(tmp):
        value = config.return_value(tmp)
        if value == 'auto':
            # delete the "auto"
            config.delete(tmp)

            # 1) check if BGP router-id is set
            # 2) check if OSPF router-id is set
            # 3) check if OSPFv3 router-id is set
            router_id = None
            for protocol in ['bgp', 'ospf', 'ospfv3']:
                if config.exists(['protocols', protocol, 'parameters', 'router-id']):
                    router_id = config.return_value(['protocols', protocol, 'parameters', 'router-id'])
                    break
            if router_id:
                config.set(tmp, value=router_id)
