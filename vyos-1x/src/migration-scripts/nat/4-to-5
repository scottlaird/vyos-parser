# Copyright 2020-2024 VyOS maintainers and contributors <maintainers@vyos.io>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library.  If not, see <http://www.gnu.org/licenses/>.

# Drop the enable/disable from the nat "log" node. If log node is specified
# it is "enabled"

from vyos.configtree import ConfigTree

def migrate(config: ConfigTree) -> None:
    if not config.exists(['nat']):
        # Nothing to do
        return

    for direction in ['source', 'destination']:
        # If a node doesn't exist, we obviously have nothing to do.
        if not config.exists(['nat', direction]):
            continue

        # However, we also need to handle the case when a 'source' or 'destination' sub-node does exist,
        # but there are no rules under it.
        if not config.list_nodes(['nat', direction]):
            continue

        for rule in config.list_nodes(['nat', direction, 'rule']):
            base = ['nat', direction, 'rule', rule]

            # Check if the log node exists and if log is enabled,
            # migrate it to the new valueless 'log' node
            if config.exists(base + ['log']):
                tmp = config.return_value(base + ['log'])
                config.delete(base + ['log'])
                if tmp == 'enable':
                    config.set(base + ['log'])
